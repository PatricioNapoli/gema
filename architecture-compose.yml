version: "3.7"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    hostname: "elasticsearch"
    environment:
      - discovery.zen.ping.unicast.hosts=elasticsearch
      - discovery.zen.minimum_master_nodes=1
      - cluster.name=elastic
      - node.name=elasticsearch
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - gema
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:6.3.2
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - "12201:12201/udp"
    networks:
      - gema
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    env_file:
      - ./.env
    environment:
      SERVER_NAME: $KIBANA_DOMAIN
      ELASTICSEARCH_URL: http://elasticsearch:9200
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
    networks:
      - gema
    volumes:
      - kibana_data:/usr/share/kibana/data

  metricbeat:
    user: root
    image: docker.elastic.co/beats/metricbeat:6.3.2
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
    networks:
      - gema
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]

  filebeat:
    image: docker.elastic.co/beats/filebeat:6.2.2
    volumes:
      - nginx_logs:/var/log/nginx
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
    networks:
      - gema
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  postgres:
    image: postgres:alpine
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: geminis
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
    networks:
      - gema
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ./.env
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@geminis.io
      PGADMIN_ENABLE_TLS: "True"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
    networks:
      - gema
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./certs/domain.crt:/certs/server.cert
      - ./certs/domain.key:/certs/server.key

  redis:
    image: redis:alpine
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
    networks:
      - gema
    volumes:
      - redis_data:/data

networks:
  gema:
    driver: overlay
    attachable: true

volumes:
  elasticsearch_data:
  nginx_logs:
  kibana_data:
  pgadmin_data:
  postgres_data:
  redis_data:
