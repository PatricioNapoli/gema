version: "3.7"

services:
  portainer-agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer_agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify
    networks:
      - portainer_agent_network
    ports:
      - 9000:9000
    depends_on:
      - portainer-agent
    volumes:
      - portainer_data:/data
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  registry:
    image: registry:2
    ports:
      - 5000:5000
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      REGISTRY_HTTP_TLS_KEY: /certs/domain.key
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    volumes:
      - registry_data:/var/lib/registry
      - ./certs:/certs
      - ./auth:/auth

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # grafana:

  nginx:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - prometheus
      - pgadmin
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./auth:/auth
      - ./certs:/certs
      - nginx_static:/static
      - nginx_sockets:/sockets

  # nginx-amplify:

  postgres:
    image: postgres:alpine
    env_file:
      - ./.env
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ./.env
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./certs/domain.crt:/certs/server.cert
      - ./certs/domain.key:/certs/server.key

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - redis_data:/data

  # kafka:
  #
  # elasticsearch:
  #
  # logstash:
  #
  # kibana:
  #
  # server:
  #
  # websocket:


volumes:
  portainer_data:
  registry_data:
  nginx_static:
  nginx_sockets:
  pgadmin_data:
  postgres_data:
  redis_data:

networks:
  portainer_agent_network:
    driver: overlay
    attachable: true
