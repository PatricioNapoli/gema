user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
error_log  /var/log/nginx/error2.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    map $http_cf_connecting_ip $client_ip {
        default $remote_addr;
        ~.      $http_cf_connecting_ip;
    }

    map $request_uri $loggable {
      default                                                           1;
      ~*\.(css|js|png|jpg|jpeg|gif|ico|woff|otf|ttf|eot|svg|txt|pdf).*$ 0;
    }

    resolver 127.0.0.11 ipv6=off valid=10s;

    root /usr/share/nginx/html;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    charset       utf-8;

    log_format  main  '$client_ip - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main if=$loggable;
    access_log /var/log/nginx/access2.log main if=$loggable;

    # TCP
    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;

    # TIMEOUTS
    client_body_timeout   12;
    client_header_timeout 12;
    keepalive_timeout     15;
    send_timeout          10;

    # BUFFERS
    client_body_buffer_size     10K;
    client_header_buffer_size   1k;
    client_max_body_size        50m;
    large_client_header_buffers 2 1k;

    # GZIP
    # gzip  on;

    # SSL
    ssl_certificate         /certs/domain.crt;
    ssl_certificate_key     /certs/domain.key;
    ssl_dhparam             /certs/dhparam.pem;

    ssl_session_cache   shared:SSL:10m;
    ssl_session_tickets off;

    ssl_stapling        on;
    ssl_stapling_verify on;

    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_ecdh_curve              secp384r1;

    # HEADERS
    add_header                  Strict-Transport-Security "max-age=31536000; includeSubDomains";
    add_header                  X-Frame-Options SAMEORIGIN;
    add_header                  X-Content-Type-Options nosniff;
    # add_header                  Content-Security-Policy	"script-src '*' 'self' 'unsafe-inline';worker-src 'self';frame-src 'self'";

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        location /server-status {
             stub_status;
             access_log   off;
        }

        location / {
             return 302 https://$host$request_uri;
        }
    }

    server {
        listen 443 default_server;
        return 404;
    }

    server {
        resolver 127.0.0.11 ipv6=off valid=10s;
        
        listen                  443 ssl http2;
        server_name             localhost
                                geminis.io
                                stg.geminis.io
                                ;

        location / {
            index index.html;
        }
    }

    server {
        resolver 127.0.0.11 ipv6=off valid=10s;

        listen                  443 ssl http2;
        server_name             hq.localhost
                                *.hq.localhost
                                hq.geminis.io
                                hq.stg.geminis.io
                                *.hq.geminis.io
                                *.hq.stg.geminis.io
                                ;

        location /static/gema/ {
            alias /static/gema/;
        }

        location / {
            #  Force DNS Check
            set $backend server;
            proxy_pass  http://$backend;

            proxy_set_header            Host $host;
            proxy_set_header            X-Real-IP $client_ip;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            X-Forwarded-Host $server_name;

            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection $connection_upgrade;
        }
    }
}
